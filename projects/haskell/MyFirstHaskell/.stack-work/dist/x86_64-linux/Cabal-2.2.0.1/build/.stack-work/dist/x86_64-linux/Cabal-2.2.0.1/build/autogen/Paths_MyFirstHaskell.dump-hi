
==================== FINAL INTERFACE ====================
2018-10-15 04:02:57.970775691 UTC

interface MyFirstHaskell-0.1.0.0-C0ecGx7aDqbLhKR8vXzuN6:Paths_MyFirstHaskell 8043
  interface hash: 0adc92793316df08730f8c2290e22c50
  ABI hash: c155b08809e9a315ede3d45f7ac8202f
  export-list hash: 949de3984fe7835e5047c7c8685b6d8d
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 72621d698ef0939281be75fd58e3a4ef
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Paths_MyFirstHaskell.getBinDir
  Paths_MyFirstHaskell.getDataDir
  Paths_MyFirstHaskell.getDataFileName
  Paths_MyFirstHaskell.getDynLibDir
  Paths_MyFirstHaskell.getLibDir
  Paths_MyFirstHaskell.getLibexecDir
  Paths_MyFirstHaskell.getSysconfDir
  Paths_MyFirstHaskell.version
module dependencies:
package dependencies: base-4.11.1.0* ghc-prim-0.5.2.0
                      integer-gmp-1.0.2.0
orphans: base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity base-4.11.1.0:Data.Monoid
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
import  -/  base-4.11.1.0:Control.Exception 3d8e6cda20877f889f07bc7c0f5cac36
import  -/  base-4.11.1.0:Data.Version 26b96b3dd83a23703e0b8110475fc04a
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.IO 1d5542cc02075c5e948018bfacea89c1
import  -/  base-4.11.1.0:GHC.IO.Exception acc060dca2e46d8b8275d06ee7d5d60d
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  base-4.11.1.0:System.Environment 7fdede11f96719870569cb0da1adac2f
import  -/  ghc-prim-0.5.2.0:GHC.Types d9b3023de7feae4a5308d643da5543f7
addDependentFile "/home/kelly/.stack/programs/x86_64-linux/ghc-8.4.3/lib/ghc-8.4.3/include/ghcversion.h" 61cc4580d32de09862d412848a79cd26
addDependentFile ".stack-work/dist/x86_64-linux/Cabal-2.2.0.1/build/autogen/cabal_macros.h" 66e7211c2f10e94bd7b4e1508c991581
addDependentFile "/usr/include/stdc-predef.h" 64086a4476ea583071277345b423d741
4ba6af7f2b02b9bb61f84735df7e446c
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Paths_MyFirstHaskell.$trModule3
                   Paths_MyFirstHaskell.$trModule1) -}
4dfe73d589ff0fba136a654d0521beee
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Paths_MyFirstHaskell.$trModule2) -}
1cc1858362cf11f78f18940bcb1da955
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Paths_MyFirstHaskell"#) -}
838ce449f76db642af33db66021ee423
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Paths_MyFirstHaskell.$trModule4) -}
5409030b09e699ac011fd2ce937b592f
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("MyFirstHaskell-0.1.0.0-C0ecGx7aDqbLhKR8vXzuN6"#) -}
5d47f357ec8b0d046ca1e55e429cfbe6
  getBinDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_MyFirstHaskell.getBinDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
5aaae40cb48c5dfffe9273f9a9bfcb0f
  getBinDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_MyFirstHaskell.getBinDir5
                   Paths_MyFirstHaskell.getBinDir2
                   eta) -}
ae722f118438dacd539f8a8da60ca161
  getBinDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e2 $dException1 e3 ->
                 case Data.Typeable.Internal.typeRepFingerprint
                        @ *
                        @ e2
                        (GHC.Exception.$p1Exception @ e2 $dException1)
                          `cast`
                        (Data.Typeable.Internal.N:Typeable[0] <*>_N <e2>_N) of wild1 { GHC.Fingerprint.Type.Fingerprint dt dt1 ->
                 case GHC.IO.Exception.$fExceptionIOException4 of wild2 { GHC.Fingerprint.Type.Fingerprint dt2 dt3 ->
                 case GHC.Prim.eqWord# dt dt2 of lwild {
                   DEFAULT
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   1#
                   -> case GHC.Prim.eqWord# dt1 dt3 of lwild1 {
                        DEFAULT
                        -> GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ GHC.Base.String
                             wild
                             eta
                        1# -> (# eta, Paths_MyFirstHaskell.getBinDir3 #) } } } } }) -}
14d07d294c523223f53e9e2b10017a5a
  getBinDir3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_MyFirstHaskell.getBinDir4) -}
5dadcec830dd2c46c088a14584df4169
  getBinDir4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("/home/kelly/projects/haskell/MyFirstHaskell/.stack-work/install/x86_64-linux/lts-12.13/8.4.3/bin"#) -}
df0bcc4ad33fd1824a6939c17fb22321
  getBinDir5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (GHC.Magic.noinline
                         @ (GHC.Types.IO GHC.IO.Encoding.Types.TextEncoding)
                         GHC.IO.Encoding.getForeignEncoding)
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.IO.Encoding.Types.TextEncoding>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Foreign.charIsRepresentable3
                        @ (GHC.Base.Maybe GHC.Base.String)
                        ipv1
                        Paths_MyFirstHaskell.getBinDir6
                        System.Environment.getEnv3
                          `cast`
                        (<Foreign.C.String.CString>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.Maybe GHC.Base.String>_R))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild {
                   GHC.Base.Nothing
                   -> System.Environment.getEnv2 ipv2 Paths_MyFirstHaskell.getBinDir6
                   GHC.Base.Just x -> (# ipv2, x #) } } }) -}
e6eae80c9b0cd982fe2fbf40b0f05ea8
  getBinDir6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_MyFirstHaskell.getBinDir7) -}
e0dbf9efb41703aeb87089a5be1e4121
  getBinDir7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("MyFirstHaskell_bindir"#) -}
091223e2218035e1c48d44f65b8102df
  getDataDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_MyFirstHaskell.getDataDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
846cd52f6885d596be22cc9aa60cf0af
  getDataDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_MyFirstHaskell.getDataDir5
                   Paths_MyFirstHaskell.getDataDir2
                   eta) -}
b7ce0318ef12a58903de548ff0cf6a2a
  getDataDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e2 $dException1 e3 ->
                 case Data.Typeable.Internal.typeRepFingerprint
                        @ *
                        @ e2
                        (GHC.Exception.$p1Exception @ e2 $dException1)
                          `cast`
                        (Data.Typeable.Internal.N:Typeable[0] <*>_N <e2>_N) of wild1 { GHC.Fingerprint.Type.Fingerprint dt dt1 ->
                 case GHC.IO.Exception.$fExceptionIOException4 of wild2 { GHC.Fingerprint.Type.Fingerprint dt2 dt3 ->
                 case GHC.Prim.eqWord# dt dt2 of lwild {
                   DEFAULT
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   1#
                   -> case GHC.Prim.eqWord# dt1 dt3 of lwild1 {
                        DEFAULT
                        -> GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ GHC.Base.String
                             wild
                             eta
                        1# -> (# eta, Paths_MyFirstHaskell.getDataDir3 #) } } } } }) -}
f40678741ee57ca94b7ae81038958bd5
  getDataDir3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_MyFirstHaskell.getDataDir4) -}
6271f2068d3cb02ac89126c78110e36e
  getDataDir4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("/home/kelly/projects/haskell/MyFirstHaskell/.stack-work/install/x86_64-linux/lts-12.13/8.4.3/share/x86_64-linux-ghc-8.4.3/MyFirstHaskell-0.1.0.0"#) -}
561a8559bd0261d5f000c3e9fd74cfb4
  getDataDir5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (GHC.Magic.noinline
                         @ (GHC.Types.IO GHC.IO.Encoding.Types.TextEncoding)
                         GHC.IO.Encoding.getForeignEncoding)
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.IO.Encoding.Types.TextEncoding>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Foreign.charIsRepresentable3
                        @ (GHC.Base.Maybe GHC.Base.String)
                        ipv1
                        Paths_MyFirstHaskell.getDataDir6
                        System.Environment.getEnv3
                          `cast`
                        (<Foreign.C.String.CString>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.Maybe GHC.Base.String>_R))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild {
                   GHC.Base.Nothing
                   -> System.Environment.getEnv2 ipv2 Paths_MyFirstHaskell.getDataDir6
                   GHC.Base.Just x -> (# ipv2, x #) } } }) -}
26172b7343fd435326bc8512823dec48
  getDataDir6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_MyFirstHaskell.getDataDir7) -}
49b558b273452241ebbbffd2b0c43a8b
  getDataDir7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("MyFirstHaskell_datadir"#) -}
b81f054c327531357a97a200a9a262db
  getDataFileName :: GHC.IO.FilePath -> GHC.Types.IO GHC.IO.FilePath
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_MyFirstHaskell.getDataFileName1
                  `cast`
                (<GHC.IO.FilePath>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.IO.FilePath>_R)) -}
8fa609119435a61d97d6d51a03810761
  getDataFileName1 ::
    GHC.IO.FilePath
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.IO.FilePath #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (name :: GHC.IO.FilePath)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.Prim.catch#
                        @ GHC.Base.String
                        @ GHC.Exception.SomeException
                        Paths_MyFirstHaskell.getDataDir5
                        Paths_MyFirstHaskell.getDataDir2
                        s of ds1 { (#,#) ipv ipv1 ->
                 (# ipv,
                    GHC.Base.++
                      @ GHC.Types.Char
                      ipv1
                      (GHC.CString.unpackAppendCString#
                         Paths_MyFirstHaskell.getDataFileName2
                         name) #) }) -}
471f169e3527089b1135701778b1c1a1
  getDataFileName2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("/"#) -}
c94de0a5b452b0d761f0f21e427314e1
  getDynLibDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_MyFirstHaskell.getDynLibDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
9e33072a66366d1270dfe5d620a58ac2
  getDynLibDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_MyFirstHaskell.getDynLibDir5
                   Paths_MyFirstHaskell.getDynLibDir2
                   eta) -}
bf5372934f64d6f06c260dd768ca6bfd
  getDynLibDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e2 $dException1 e3 ->
                 case Data.Typeable.Internal.typeRepFingerprint
                        @ *
                        @ e2
                        (GHC.Exception.$p1Exception @ e2 $dException1)
                          `cast`
                        (Data.Typeable.Internal.N:Typeable[0] <*>_N <e2>_N) of wild1 { GHC.Fingerprint.Type.Fingerprint dt dt1 ->
                 case GHC.IO.Exception.$fExceptionIOException4 of wild2 { GHC.Fingerprint.Type.Fingerprint dt2 dt3 ->
                 case GHC.Prim.eqWord# dt dt2 of lwild {
                   DEFAULT
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   1#
                   -> case GHC.Prim.eqWord# dt1 dt3 of lwild1 {
                        DEFAULT
                        -> GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ GHC.Base.String
                             wild
                             eta
                        1# -> (# eta, Paths_MyFirstHaskell.getDynLibDir3 #) } } } } }) -}
b4a644565b3a00be831e17f974896a28
  getDynLibDir3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_MyFirstHaskell.getDynLibDir4) -}
a3a8e0abe7ad616abd1bbf89469f3990
  getDynLibDir4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("/home/kelly/projects/haskell/MyFirstHaskell/.stack-work/install/x86_64-linux/lts-12.13/8.4.3/lib/x86_64-linux-ghc-8.4.3"#) -}
4e138ec6cd33803f9a5bd26e510a6f46
  getDynLibDir5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (GHC.Magic.noinline
                         @ (GHC.Types.IO GHC.IO.Encoding.Types.TextEncoding)
                         GHC.IO.Encoding.getForeignEncoding)
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.IO.Encoding.Types.TextEncoding>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Foreign.charIsRepresentable3
                        @ (GHC.Base.Maybe GHC.Base.String)
                        ipv1
                        Paths_MyFirstHaskell.getDynLibDir6
                        System.Environment.getEnv3
                          `cast`
                        (<Foreign.C.String.CString>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.Maybe GHC.Base.String>_R))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild {
                   GHC.Base.Nothing
                   -> System.Environment.getEnv2
                        ipv2
                        Paths_MyFirstHaskell.getDynLibDir6
                   GHC.Base.Just x -> (# ipv2, x #) } } }) -}
bd3c322668bd0a704c470258894b39f2
  getDynLibDir6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_MyFirstHaskell.getDynLibDir7) -}
643475727e6baf83d35f0437a560bbb6
  getDynLibDir7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("MyFirstHaskell_dynlibdir"#) -}
c390416e72f551aaef9867394bc7a90e
  getLibDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_MyFirstHaskell.getLibDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
4b95766302eb108387d1ea85df53c6cb
  getLibDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_MyFirstHaskell.getLibDir5
                   Paths_MyFirstHaskell.getLibDir2
                   eta) -}
b369f10c79c55538dc081f22573278c0
  getLibDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e2 $dException1 e3 ->
                 case Data.Typeable.Internal.typeRepFingerprint
                        @ *
                        @ e2
                        (GHC.Exception.$p1Exception @ e2 $dException1)
                          `cast`
                        (Data.Typeable.Internal.N:Typeable[0] <*>_N <e2>_N) of wild1 { GHC.Fingerprint.Type.Fingerprint dt dt1 ->
                 case GHC.IO.Exception.$fExceptionIOException4 of wild2 { GHC.Fingerprint.Type.Fingerprint dt2 dt3 ->
                 case GHC.Prim.eqWord# dt dt2 of lwild {
                   DEFAULT
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   1#
                   -> case GHC.Prim.eqWord# dt1 dt3 of lwild1 {
                        DEFAULT
                        -> GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ GHC.Base.String
                             wild
                             eta
                        1# -> (# eta, Paths_MyFirstHaskell.getLibDir3 #) } } } } }) -}
d61446f5bbb836a29ed8fd482f9d8ebb
  getLibDir3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_MyFirstHaskell.getLibDir4) -}
952c8f46fdac4a97c47ea30592f0a8df
  getLibDir4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("/home/kelly/projects/haskell/MyFirstHaskell/.stack-work/install/x86_64-linux/lts-12.13/8.4.3/lib/x86_64-linux-ghc-8.4.3/MyFirstHaskell-0.1.0.0-C0ecGx7aDqbLhKR8vXzuN6"#) -}
8b5c85f5269a4f78cc5bfcd7e746757f
  getLibDir5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (GHC.Magic.noinline
                         @ (GHC.Types.IO GHC.IO.Encoding.Types.TextEncoding)
                         GHC.IO.Encoding.getForeignEncoding)
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.IO.Encoding.Types.TextEncoding>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Foreign.charIsRepresentable3
                        @ (GHC.Base.Maybe GHC.Base.String)
                        ipv1
                        Paths_MyFirstHaskell.getLibDir6
                        System.Environment.getEnv3
                          `cast`
                        (<Foreign.C.String.CString>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.Maybe GHC.Base.String>_R))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild {
                   GHC.Base.Nothing
                   -> System.Environment.getEnv2 ipv2 Paths_MyFirstHaskell.getLibDir6
                   GHC.Base.Just x -> (# ipv2, x #) } } }) -}
010f3ceb8e67f2b574a6b9b24c57d03a
  getLibDir6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_MyFirstHaskell.getLibDir7) -}
8b2969fecb460822ee00057faa74e4ea
  getLibDir7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("MyFirstHaskell_libdir"#) -}
7d9f95fddb894a3eb9c502a3d52973e6
  getLibexecDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_MyFirstHaskell.getLibexecDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
161babefe5cb718964e1a50acd7a39c8
  getLibexecDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_MyFirstHaskell.getLibexecDir5
                   Paths_MyFirstHaskell.getLibexecDir2
                   eta) -}
7b33213da04547e74c31148cd64bb550
  getLibexecDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e2 $dException1 e3 ->
                 case Data.Typeable.Internal.typeRepFingerprint
                        @ *
                        @ e2
                        (GHC.Exception.$p1Exception @ e2 $dException1)
                          `cast`
                        (Data.Typeable.Internal.N:Typeable[0] <*>_N <e2>_N) of wild1 { GHC.Fingerprint.Type.Fingerprint dt dt1 ->
                 case GHC.IO.Exception.$fExceptionIOException4 of wild2 { GHC.Fingerprint.Type.Fingerprint dt2 dt3 ->
                 case GHC.Prim.eqWord# dt dt2 of lwild {
                   DEFAULT
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   1#
                   -> case GHC.Prim.eqWord# dt1 dt3 of lwild1 {
                        DEFAULT
                        -> GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ GHC.Base.String
                             wild
                             eta
                        1# -> (# eta, Paths_MyFirstHaskell.getLibexecDir3 #) } } } } }) -}
dfdb43635e19330bf74746a83bc89ee2
  getLibexecDir3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_MyFirstHaskell.getLibexecDir4) -}
fd4fab2aaf844bf3a992d35b18178568
  getLibexecDir4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("/home/kelly/projects/haskell/MyFirstHaskell/.stack-work/install/x86_64-linux/lts-12.13/8.4.3/libexec/x86_64-linux-ghc-8.4.3/MyFirstHaskell-0.1.0.0"#) -}
de013a79f12f84279bf07a12c840c6db
  getLibexecDir5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (GHC.Magic.noinline
                         @ (GHC.Types.IO GHC.IO.Encoding.Types.TextEncoding)
                         GHC.IO.Encoding.getForeignEncoding)
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.IO.Encoding.Types.TextEncoding>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Foreign.charIsRepresentable3
                        @ (GHC.Base.Maybe GHC.Base.String)
                        ipv1
                        Paths_MyFirstHaskell.getLibexecDir6
                        System.Environment.getEnv3
                          `cast`
                        (<Foreign.C.String.CString>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.Maybe GHC.Base.String>_R))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild {
                   GHC.Base.Nothing
                   -> System.Environment.getEnv2
                        ipv2
                        Paths_MyFirstHaskell.getLibexecDir6
                   GHC.Base.Just x -> (# ipv2, x #) } } }) -}
fdc7a2b57335c98a6c1d47b1a51f2fb5
  getLibexecDir6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_MyFirstHaskell.getLibexecDir7) -}
0d04bc5e29c7dab58ccd4a44a01619e4
  getLibexecDir7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("MyFirstHaskell_libexecdir"#) -}
68731d870bcef9df0145edc22e46d1c0
  getSysconfDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_MyFirstHaskell.getSysconfDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
0f7c44f568862fc7760c0a109d30dbd6
  getSysconfDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_MyFirstHaskell.getSysconfDir5
                   Paths_MyFirstHaskell.getSysconfDir2
                   eta) -}
77fc4768770aeb76e08b03f6d60a7895
  getSysconfDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e2 $dException1 e3 ->
                 case Data.Typeable.Internal.typeRepFingerprint
                        @ *
                        @ e2
                        (GHC.Exception.$p1Exception @ e2 $dException1)
                          `cast`
                        (Data.Typeable.Internal.N:Typeable[0] <*>_N <e2>_N) of wild1 { GHC.Fingerprint.Type.Fingerprint dt dt1 ->
                 case GHC.IO.Exception.$fExceptionIOException4 of wild2 { GHC.Fingerprint.Type.Fingerprint dt2 dt3 ->
                 case GHC.Prim.eqWord# dt dt2 of lwild {
                   DEFAULT
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   1#
                   -> case GHC.Prim.eqWord# dt1 dt3 of lwild1 {
                        DEFAULT
                        -> GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ GHC.Base.String
                             wild
                             eta
                        1# -> (# eta, Paths_MyFirstHaskell.getSysconfDir3 #) } } } } }) -}
6c190debad8d8f63c038e25fe7626335
  getSysconfDir3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_MyFirstHaskell.getSysconfDir4) -}
f05e1fbc354e81de4051aa332386587d
  getSysconfDir4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("/home/kelly/projects/haskell/MyFirstHaskell/.stack-work/install/x86_64-linux/lts-12.13/8.4.3/etc"#) -}
17dac52b7e1538cd9faccf0395b3020e
  getSysconfDir5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (GHC.Magic.noinline
                         @ (GHC.Types.IO GHC.IO.Encoding.Types.TextEncoding)
                         GHC.IO.Encoding.getForeignEncoding)
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.IO.Encoding.Types.TextEncoding>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Foreign.charIsRepresentable3
                        @ (GHC.Base.Maybe GHC.Base.String)
                        ipv1
                        Paths_MyFirstHaskell.getSysconfDir6
                        System.Environment.getEnv3
                          `cast`
                        (<Foreign.C.String.CString>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.Maybe GHC.Base.String>_R))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild {
                   GHC.Base.Nothing
                   -> System.Environment.getEnv2
                        ipv2
                        Paths_MyFirstHaskell.getSysconfDir6
                   GHC.Base.Just x -> (# ipv2, x #) } } }) -}
a623a3d5bcae0357c36f704c114ece20
  getSysconfDir6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_MyFirstHaskell.getSysconfDir7) -}
90ebe17cb622b0822bf701ffbad5e930
  getSysconfDir7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("MyFirstHaskell_sysconfdir"#) -}
93fd2c9fd25f5deba561114c86ef9d91
  version :: Data.Version.Version
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Data.Version.Version
                   Paths_MyFirstHaskell.version1
                   (GHC.Types.[] @ GHC.Base.String)) -}
c8d9d8b1e66e8e71746f5cb658e5405c
  version1 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Paths_MyFirstHaskell.version5
                   Paths_MyFirstHaskell.version2) -}
812683cc12887dde4e9225eb3db62c98
  version2 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Paths_MyFirstHaskell.version6
                   Paths_MyFirstHaskell.version3) -}
3800ad3cc6591cff7b311008166ff0d2
  version3 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Paths_MyFirstHaskell.version5
                   Paths_MyFirstHaskell.version4) -}
8e06a6412557dc49521a1d5971530977
  version4 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Paths_MyFirstHaskell.version5
                   (GHC.Types.[] @ GHC.Types.Int)) -}
32ff791137a62f7fe305632cd6dfc2e3
  version5 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
9bbc700a70d29bf18f6ae299cbcb8c90
  version6 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

