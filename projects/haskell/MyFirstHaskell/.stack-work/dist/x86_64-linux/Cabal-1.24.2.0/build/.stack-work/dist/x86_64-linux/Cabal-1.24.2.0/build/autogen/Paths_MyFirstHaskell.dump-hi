
==================== FINAL INTERFACE ====================
2018-10-15 04:30:04.726935 UTC

interface MyFirstHaskell-0.1.0.0-8u74AzQBt0c9q3F1EOWbBH:Paths_MyFirstHaskell 8002
  interface hash: 9ad44781c3e316e8d567cde75d39248c
  ABI hash: 9607b013665037732602512a246542ba
  export-list hash: 5568c9dd371e0362d0622aa1b7b8e54a
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 7d6ecbbe7807ae1be68dd159996443be
  sig of: Nothing
  used TH splices: False
  where
exports:
  Paths_MyFirstHaskell.getBinDir
  Paths_MyFirstHaskell.getDataDir
  Paths_MyFirstHaskell.getDataFileName
  Paths_MyFirstHaskell.getDynLibDir
  Paths_MyFirstHaskell.getLibDir
  Paths_MyFirstHaskell.getLibexecDir
  Paths_MyFirstHaskell.getSysconfDir
  Paths_MyFirstHaskell.version
module dependencies:
package dependencies: base-4.9.1.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:Control.Exception a76dd9666251322fe34dbcca3a0817bf
import  -/  base-4.9.1.0:Control.Exception.Base 1e106916283856f4d9caeddab92cd861
import  -/  base-4.9.1.0:Data.Version 20afc045b5bb277e8668ef72aca55a7e
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.IO eb504c57b397cf133849f8586f15dafb
import  -/  base-4.9.1.0:GHC.IO.Exception 5064be4c355632a1d1c4f2322f56ac52
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:System.Environment 08cb808e8e6a7821e6f8cfa76a977431
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
addDependentFile "/home/kelly/.stack/programs/x86_64-linux/ghc-8.0.2/lib/ghc-8.0.2/include/ghcversion.h"
addDependentFile ".stack-work/dist/x86_64-linux/Cabal-1.24.2.0/build/autogen/cabal_macros.h"
addDependentFile "/usr/include/stdc-predef.h"
f160783d9eb02ac93ba70896b9bcf6af
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Paths_MyFirstHaskell.$trModule2
                   Paths_MyFirstHaskell.$trModule1) -}
2c433f3ed8395cae08cdfa7cfd812885
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Paths_MyFirstHaskell"#) -}
8a7e2957de513444747d8a639c92ff86
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "MyFirstHaskell-0.1.0.0-8u74AzQBt0c9q3F1EOWbBH"#) -}
18d5ce63ca7613f334e4f9561b1d0c77
  bindir :: GHC.IO.FilePath
  {- Unfolding: (GHC.CString.unpackCString#
                   "/home/kelly/projects/haskell/MyFirstHaskell/.stack-work/install/x86_64-linux/lts-9.21/8.0.2/bin"#) -}
0f5017a392ec88226350d8d836242750
  datadir :: GHC.IO.FilePath
  {- Unfolding: (GHC.CString.unpackCString#
                   "/home/kelly/projects/haskell/MyFirstHaskell/.stack-work/install/x86_64-linux/lts-9.21/8.0.2/share/x86_64-linux-ghc-8.0.2/MyFirstHaskell-0.1.0.0"#) -}
3e1b31a0542e0e3224c284fe762c047b
  dynlibdir :: GHC.IO.FilePath
  {- Unfolding: (GHC.CString.unpackCString#
                   "/home/kelly/projects/haskell/MyFirstHaskell/.stack-work/install/x86_64-linux/lts-9.21/8.0.2/lib/x86_64-linux-ghc-8.0.2"#) -}
d618bb1255e1a0aa3bf34e5639bc542c
  getBinDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_MyFirstHaskell.getBinDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
1b76b60bf08e7dba0a0d6b261807509d
  getBinDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_MyFirstHaskell.getBinDir3
                     `cast`
                   (GHC.Types.N:IO[0] <GHC.Base.String>_R)
                   Paths_MyFirstHaskell.getBinDir2
                   eta) -}
d621120b731df2bf1ceea37e09ce8b0f
  getBinDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e100 $dException1 e2 ->
                 case (GHC.Exception.$p1Exception @ e100 $dException1)
                        `cast`
                      (Data.Typeable.Internal.N:Typeable[0] <*>_N <e100>_N)
                        (GHC.Prim.proxy#
                           @ *
                           @ e100) of wild1 { Data.Typeable.Internal.TypeRep dt dt1 ds2 ds3 ds4 ->
                 case GHC.IO.Exception.$fExceptionIOException3 of wild2 { Data.Typeable.Internal.TypeRep dt2 dt3 ds5 ds6 ds7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.eqWord# dt dt2) of wild3 {
                   GHC.Types.False
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqWord# dt1 dt3) of wild4 {
                        GHC.Types.False
                        -> GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ GHC.Base.String
                             wild
                             eta
                        GHC.Types.True
                        -> (# eta, Paths_MyFirstHaskell.bindir #) } } } } }) -}
c852450a257eb7cd244c662903a69f1c
  getBinDir3 :: GHC.Types.IO GHC.Base.String
  {- Unfolding: (GHC.Magic.lazy
                   @ (GHC.Types.IO GHC.Base.String)
                   Paths_MyFirstHaskell.getBinDir4
                     `cast`
                   (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R))) -}
45fa0707377b80802cbe67f0136fad04
  getBinDir4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1,
     Unfolding: (System.Environment.getEnv1
                   Paths_MyFirstHaskell.getBinDir5) -}
f2bcf5c139966a4ffcb4848313f9bb32
  getBinDir5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "MyFirstHaskell_bindir"#) -}
ad2ecc90b50bf2d3872e25b94c2adba8
  getDataDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_MyFirstHaskell.getDataDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
bcaa59b5eaeabad19d31bcfdaf1d5475
  getDataDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_MyFirstHaskell.getDataDir3
                     `cast`
                   (GHC.Types.N:IO[0] <GHC.Base.String>_R)
                   Paths_MyFirstHaskell.getDataDir2
                   eta) -}
bf57cab6b8999730c88eb18bd5fe6d1a
  getDataDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e100 $dException1 e2 ->
                 case (GHC.Exception.$p1Exception @ e100 $dException1)
                        `cast`
                      (Data.Typeable.Internal.N:Typeable[0] <*>_N <e100>_N)
                        (GHC.Prim.proxy#
                           @ *
                           @ e100) of wild1 { Data.Typeable.Internal.TypeRep dt dt1 ds2 ds3 ds4 ->
                 case GHC.IO.Exception.$fExceptionIOException3 of wild2 { Data.Typeable.Internal.TypeRep dt2 dt3 ds5 ds6 ds7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.eqWord# dt dt2) of wild3 {
                   GHC.Types.False
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqWord# dt1 dt3) of wild4 {
                        GHC.Types.False
                        -> GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ GHC.Base.String
                             wild
                             eta
                        GHC.Types.True
                        -> (# eta, Paths_MyFirstHaskell.datadir #) } } } } }) -}
86fe1e44cfa308b7b05ba35f9ce12e30
  getDataDir3 :: GHC.Types.IO GHC.Base.String
  {- Unfolding: (GHC.Magic.lazy
                   @ (GHC.Types.IO GHC.Base.String)
                   Paths_MyFirstHaskell.getDataDir4
                     `cast`
                   (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R))) -}
7c5279d52262813cefd88a48d4494aee
  getDataDir4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1,
     Unfolding: (System.Environment.getEnv1
                   Paths_MyFirstHaskell.getDataDir5) -}
3768078efa2baee75925e93c931abf91
  getDataDir5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "MyFirstHaskell_datadir"#) -}
f3b87eda1e1cfe3049f87cc6917ce1ff
  getDataFileName :: GHC.IO.FilePath -> GHC.Types.IO GHC.IO.FilePath
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_MyFirstHaskell.getDataFileName1
                  `cast`
                (<GHC.IO.FilePath>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.IO.FilePath>_R)) -}
25289d86e53540944112224649805aae
  getDataFileName1 ::
    GHC.IO.FilePath
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.IO.FilePath #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (name :: GHC.IO.FilePath)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.catch#
                        @ GHC.Base.String
                        @ GHC.Exception.SomeException
                        Paths_MyFirstHaskell.getDataDir3
                          `cast`
                        (GHC.Types.N:IO[0] <GHC.Base.String>_R)
                        Paths_MyFirstHaskell.getDataDir2
                        eta of ds1 { (#,#) ipv ipv1 ->
                 (# ipv,
                    GHC.Base.++
                      @ GHC.Types.Char
                      ipv1
                      (GHC.CString.unpackAppendCString# "/"# name) #) }) -}
b3b0d71fce20d71720d86d11e3ddeb97
  getDynLibDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_MyFirstHaskell.getDynLibDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
841c7b5fc89d6f7d5a3976cdea7eaf13
  getDynLibDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_MyFirstHaskell.getDynLibDir3
                     `cast`
                   (GHC.Types.N:IO[0] <GHC.Base.String>_R)
                   Paths_MyFirstHaskell.getDynLibDir2
                   eta) -}
6e9c6c3ce115b2a065f313fa7eb1fa12
  getDynLibDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e100 $dException1 e2 ->
                 case (GHC.Exception.$p1Exception @ e100 $dException1)
                        `cast`
                      (Data.Typeable.Internal.N:Typeable[0] <*>_N <e100>_N)
                        (GHC.Prim.proxy#
                           @ *
                           @ e100) of wild1 { Data.Typeable.Internal.TypeRep dt dt1 ds2 ds3 ds4 ->
                 case GHC.IO.Exception.$fExceptionIOException3 of wild2 { Data.Typeable.Internal.TypeRep dt2 dt3 ds5 ds6 ds7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.eqWord# dt dt2) of wild3 {
                   GHC.Types.False
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqWord# dt1 dt3) of wild4 {
                        GHC.Types.False
                        -> GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ GHC.Base.String
                             wild
                             eta
                        GHC.Types.True
                        -> (# eta, Paths_MyFirstHaskell.dynlibdir #) } } } } }) -}
418758ae69f6e885e2ee5fc29480f994
  getDynLibDir3 :: GHC.Types.IO GHC.Base.String
  {- Unfolding: (GHC.Magic.lazy
                   @ (GHC.Types.IO GHC.Base.String)
                   Paths_MyFirstHaskell.getDynLibDir4
                     `cast`
                   (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R))) -}
e180bc8eafae887a8288966360b95a58
  getDynLibDir4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1,
     Unfolding: (System.Environment.getEnv1
                   Paths_MyFirstHaskell.getDynLibDir5) -}
88148649b5edf14e4945f4882fbff7d8
  getDynLibDir5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "MyFirstHaskell_dynlibdir"#) -}
fa27ed47b4a50bd8d4b2935f3d1364b3
  getLibDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_MyFirstHaskell.getLibDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
b0818233e8d4353ec54e943c8fbe3868
  getLibDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_MyFirstHaskell.getLibDir3
                     `cast`
                   (GHC.Types.N:IO[0] <GHC.Base.String>_R)
                   Paths_MyFirstHaskell.getLibDir2
                   eta) -}
eb590374d9e244d4ca0544035b0efc1e
  getLibDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e100 $dException1 e2 ->
                 case (GHC.Exception.$p1Exception @ e100 $dException1)
                        `cast`
                      (Data.Typeable.Internal.N:Typeable[0] <*>_N <e100>_N)
                        (GHC.Prim.proxy#
                           @ *
                           @ e100) of wild1 { Data.Typeable.Internal.TypeRep dt dt1 ds2 ds3 ds4 ->
                 case GHC.IO.Exception.$fExceptionIOException3 of wild2 { Data.Typeable.Internal.TypeRep dt2 dt3 ds5 ds6 ds7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.eqWord# dt dt2) of wild3 {
                   GHC.Types.False
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqWord# dt1 dt3) of wild4 {
                        GHC.Types.False
                        -> GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ GHC.Base.String
                             wild
                             eta
                        GHC.Types.True
                        -> (# eta, Paths_MyFirstHaskell.libdir #) } } } } }) -}
31a6eb695ef33b9ce89499403a7b6b20
  getLibDir3 :: GHC.Types.IO GHC.Base.String
  {- Unfolding: (GHC.Magic.lazy
                   @ (GHC.Types.IO GHC.Base.String)
                   Paths_MyFirstHaskell.getLibDir4
                     `cast`
                   (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R))) -}
9ad8a67981cfa81dc62b4f043d071332
  getLibDir4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1,
     Unfolding: (System.Environment.getEnv1
                   Paths_MyFirstHaskell.getLibDir5) -}
59c74d13e05f0faf1642174b2a3d2783
  getLibDir5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "MyFirstHaskell_libdir"#) -}
ad0032a7cae892db86284546fd400027
  getLibexecDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_MyFirstHaskell.getLibexecDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
edf7df4ccb01b97d236dfec205dd6cc8
  getLibexecDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_MyFirstHaskell.getLibexecDir3
                     `cast`
                   (GHC.Types.N:IO[0] <GHC.Base.String>_R)
                   Paths_MyFirstHaskell.getLibexecDir2
                   eta) -}
ea3b6ada18079328f1c7f8eb6987591d
  getLibexecDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e100 $dException1 e2 ->
                 case (GHC.Exception.$p1Exception @ e100 $dException1)
                        `cast`
                      (Data.Typeable.Internal.N:Typeable[0] <*>_N <e100>_N)
                        (GHC.Prim.proxy#
                           @ *
                           @ e100) of wild1 { Data.Typeable.Internal.TypeRep dt dt1 ds2 ds3 ds4 ->
                 case GHC.IO.Exception.$fExceptionIOException3 of wild2 { Data.Typeable.Internal.TypeRep dt2 dt3 ds5 ds6 ds7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.eqWord# dt dt2) of wild3 {
                   GHC.Types.False
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqWord# dt1 dt3) of wild4 {
                        GHC.Types.False
                        -> GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ GHC.Base.String
                             wild
                             eta
                        GHC.Types.True
                        -> (# eta, Paths_MyFirstHaskell.libexecdir #) } } } } }) -}
63585b0a275acd389b0af7ef66f189bc
  getLibexecDir3 :: GHC.Types.IO GHC.Base.String
  {- Unfolding: (GHC.Magic.lazy
                   @ (GHC.Types.IO GHC.Base.String)
                   Paths_MyFirstHaskell.getLibexecDir4
                     `cast`
                   (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R))) -}
2619abf361dbc2e8d141fa000f2152ac
  getLibexecDir4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1,
     Unfolding: (System.Environment.getEnv1
                   Paths_MyFirstHaskell.getLibexecDir5) -}
9545c1f65bb033afc4c1c008f8958262
  getLibexecDir5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "MyFirstHaskell_libexecdir"#) -}
0f77c23e846e5dd0f7cc46e45e379c76
  getSysconfDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_MyFirstHaskell.getSysconfDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
f2f143e901b220eac7d181853dc4b0a8
  getSysconfDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.SomeException
                   Paths_MyFirstHaskell.getSysconfDir3
                     `cast`
                   (GHC.Types.N:IO[0] <GHC.Base.String>_R)
                   Paths_MyFirstHaskell.getSysconfDir2
                   eta) -}
6c88f2b131681dc6ce13b594e611dca9
  getSysconfDir2 ::
    GHC.Exception.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2,
     Unfolding: (\ (e1 :: GHC.Exception.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.SomeException e100 $dException1 e2 ->
                 case (GHC.Exception.$p1Exception @ e100 $dException1)
                        `cast`
                      (Data.Typeable.Internal.N:Typeable[0] <*>_N <e100>_N)
                        (GHC.Prim.proxy#
                           @ *
                           @ e100) of wild1 { Data.Typeable.Internal.TypeRep dt dt1 ds2 ds3 ds4 ->
                 case GHC.IO.Exception.$fExceptionIOException3 of wild2 { Data.Typeable.Internal.TypeRep dt2 dt3 ds5 ds6 ds7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.eqWord# dt dt2) of wild3 {
                   GHC.Types.False
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqWord# dt1 dt3) of wild4 {
                        GHC.Types.False
                        -> GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ GHC.Base.String
                             wild
                             eta
                        GHC.Types.True
                        -> (# eta, Paths_MyFirstHaskell.sysconfdir #) } } } } }) -}
624a25098865ec246be3caf78a3427a0
  getSysconfDir3 :: GHC.Types.IO GHC.Base.String
  {- Unfolding: (GHC.Magic.lazy
                   @ (GHC.Types.IO GHC.Base.String)
                   Paths_MyFirstHaskell.getSysconfDir4
                     `cast`
                   (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R))) -}
dad272160e7c805149bf252387bb6851
  getSysconfDir4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1,
     Unfolding: (System.Environment.getEnv1
                   Paths_MyFirstHaskell.getSysconfDir5) -}
f06097771f3132571b839f9bded9ee5c
  getSysconfDir5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "MyFirstHaskell_sysconfdir"#) -}
5e1341434d96e3a4517dab328491457e
  libdir :: GHC.IO.FilePath
  {- Unfolding: (GHC.CString.unpackCString#
                   "/home/kelly/projects/haskell/MyFirstHaskell/.stack-work/install/x86_64-linux/lts-9.21/8.0.2/lib/x86_64-linux-ghc-8.0.2/MyFirstHaskell-0.1.0.0-8u74AzQBt0c9q3F1EOWbBH"#) -}
b1c67458d82407ca38d837c8cb6eea70
  libexecdir :: GHC.IO.FilePath
  {- Unfolding: (GHC.CString.unpackCString#
                   "/home/kelly/projects/haskell/MyFirstHaskell/.stack-work/install/x86_64-linux/lts-9.21/8.0.2/libexec"#) -}
b85b2b6da7766e600f2d85afda94240f
  sysconfdir :: GHC.IO.FilePath
  {- Unfolding: (GHC.CString.unpackCString#
                   "/home/kelly/projects/haskell/MyFirstHaskell/.stack-work/install/x86_64-linux/lts-9.21/8.0.2/etc"#) -}
65a91283c997dfabcdb0c98c0aafb59f
  version :: Data.Version.Version
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Data.Version.Version
                   Paths_MyFirstHaskell.version1
                   (GHC.Types.[] @ GHC.Base.String)) -}
a10f62fa6e037f46e92157ca38b94739
  version1 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Paths_MyFirstHaskell.version5
                   Paths_MyFirstHaskell.version2) -}
02403aaab2473b98659030b459acae9e
  version2 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Paths_MyFirstHaskell.version6
                   Paths_MyFirstHaskell.version3) -}
3162abecac9e135e4253f7522cb50570
  version3 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Paths_MyFirstHaskell.version5
                   Paths_MyFirstHaskell.version4) -}
c76dce7e17e80c917e665ff2a937dc85
  version4 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Paths_MyFirstHaskell.version5
                   (GHC.Types.[] @ GHC.Types.Int)) -}
337e54ae9924abca3d94c93c9a3bfd50
  version5 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
43e6ca8cf9b3f5ddebaa08e1cb94ef13
  version6 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

